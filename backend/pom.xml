<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Project Identification -->
  <groupId>com.budra.uvh</groupId> <!-- Adjusted GroupId -->
  <artifactId>UVHResolver</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>UVHResolver</name>

  <!-- Dependency Versions and Build Properties -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <!-- Define versions -->
    <jersey.version>3.1.5</jersey.version>
    <jakarta.ws.rs-api.version>3.1.0</jakarta.ws.rs-api.version>
    <jakarta.inject-api.version>2.0.1</jakarta.inject-api.version>
    <jakarta.cdi-api.version>4.0.1</jakarta.cdi-api.version>
    <jakarta.servlet.version>6.0.0</jakarta.servlet.version>
    <jakarta.xml.bind-api.version>4.0.1</jakarta.xml.bind-api.version>
    <jaxb.runtime.version>4.0.4</jaxb.runtime.version>
    <junit.version>5.10.2</junit.version>
    <postgresql.version>42.7.1</postgresql.version>
    <slf4j.version>2.0.11</slf4j.version>
    <logback.version>1.4.14</logback.version>
    <hikaricp.version>5.1.0</hikaricp.version>
    <jgit.version>6.8.0.202311291450-r</jgit.version>
    <!-- Maven Plugin Versions -->
    <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>
  </properties>

  <dependencies>
    <!-- Keep Servlet API provided (Tomcat provides this) -->
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>${jakarta.servlet.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- JAX-RS API (needed for @Path, @POST etc.) - Compile Scope -->
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <version>${jakarta.ws.rs-api.version}</version>
    </dependency>

    <!-- Dependency Injection API (needed for Provider interface used by factory) - Compile Scope -->
    <dependency>
      <groupId>jakarta.inject</groupId>
      <artifactId>jakarta.inject-api</artifactId>
      <version>${jakarta.inject-api.version}</version>
    </dependency>

    <!-- CDI API (Scope annotations @RequestScoped etc.) - Compile Scope -->
    <!-- KEPT for safety: Although app code doesn't use scopes for DI, framework internals might expect it. -->
    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>jakarta.enterprise.cdi-api</artifactId>
      <version>${jakarta.cdi-api.version}</version>
    </dependency>

    <!-- Jersey JAX-RS Implementation -->
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <!-- Jersey HK2 -->
    <!-- KEPT: Needed for AbstractBinder and HK2's RequestScoped class used in AppConfig factory binding -->
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <!-- JAXB API and Runtime -->
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>${jakarta.xml.bind-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>${jaxb.runtime.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- PostgreSQL Database Driver -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- HikariCP Connection Pooling -->
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${hikaricp.version}</version>
    </dependency>

    <!-- Logging Facade (SLF4j) and Implementation (Logback) -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- JGit -->
    <dependency>
      <groupId>org.eclipse.jgit</groupId>
      <artifactId>org.eclipse.jgit</artifactId>
      <version>${jgit.version}</version>
    </dependency>

    <!-- JUnit 5 Testing Dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <!-- Build Configuration (remains the same) -->
  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
      </plugin>
      <!-- Tomcat plugin commented out -->
    </plugins>
  </build>

</project>